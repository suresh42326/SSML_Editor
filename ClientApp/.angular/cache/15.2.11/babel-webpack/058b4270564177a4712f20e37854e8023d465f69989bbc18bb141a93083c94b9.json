{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst _c0 = [\"editor\"];\nconst _c1 = [\"output\"];\nexport class SsmlEditorComponent {\n  constructor() {}\n  ngOnInit() {\n    document.execCommand(\"defaultParagraphSeparator\", false, \"p\");\n  }\n  markword(className) {\n    document.execCommand(\"insertHTML\", false, `<span class='${className}'>${document.getSelection()}</span>`);\n  }\n  insertDelay() {\n    document.execCommand(\"insertHTML\", false, \"<i class='fa fa-clock-o' contenteditable='false'></i>\");\n  }\n  emphasis() {\n    this.markword(\"emphasis\");\n  }\n  pitchUp() {\n    this.markword(\"pitch-up\");\n  }\n  pitchDown() {\n    this.markword(\"pitch-down\");\n  }\n  undo() {\n    document.execCommand(\"undo\");\n  }\n  convertToSsml() {\n    const html = this.editor.nativeElement.innerHTML;\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n    // Replace nbsp\n    doc.body.innerHTML = doc.body.innerHTML.replace(/&nbsp;/g, ' ');\n    // Remove empty paragraphs\n    doc.querySelectorAll('p').forEach(p => {\n      if (p.textContent.trim() === '') {\n        p.remove();\n      }\n    });\n    // Replace elements\n    doc.querySelectorAll('.emphasis').forEach(el => {\n      const emphasis = doc.createElement('emphasis');\n      emphasis.setAttribute('level', 'strong');\n      emphasis.innerHTML = el.innerHTML;\n      el.replaceWith(emphasis);\n    });\n    doc.querySelectorAll('.fa-clock-o').forEach(el => {\n      const breakEl = doc.createElement('break');\n      breakEl.setAttribute('time', '300ms');\n      el.replaceWith(breakEl);\n    });\n    doc.querySelectorAll('.pitch-up').forEach(el => {\n      const prosody = doc.createElement('prosody');\n      prosody.setAttribute('pitch', '+3st');\n      prosody.innerHTML = el.innerHTML;\n      el.replaceWith(prosody);\n    });\n    doc.querySelectorAll('.pitch-down').forEach(el => {\n      const prosody = doc.createElement('prosody');\n      prosody.setAttribute('pitch', '-3st');\n      prosody.innerHTML = el.innerHTML;\n      el.replaceWith(prosody);\n    });\n    this.output.nativeElement.textContent = `<speak>${doc.body.innerHTML}</speak>`;\n  }\n  onPaste(event) {\n    event.preventDefault();\n    const text = event.clipboardData.getData(\"text/plain\");\n    document.execCommand(\"insertHTML\", false, text);\n  }\n  static #_ = this.ɵfac = function SsmlEditorComponent_Factory(t) {\n    return new (t || SsmlEditorComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SsmlEditorComponent,\n    selectors: [[\"app-ssml-editor\"]],\n    viewQuery: function SsmlEditorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editor = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.output = _t.first);\n      }\n    },\n    decls: 10,\n    vars: 0,\n    consts: [[\"aria-live\", \"polite\"], [1, \"btn\", \"btn-primary\"]],\n    template: function SsmlEditorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1, \"SSML Editor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3, \"This is a simple example of an Angular component.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"p\", 0);\n        i0.ɵɵtext(5, \"Current count: \");\n        i0.ɵɵelementStart(6, \"strong\");\n        i0.ɵɵtext(7, \"2\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"button\", 1);\n        i0.ɵɵtext(9, \"Increment\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["SsmlEditorComponent","constructor","ngOnInit","document","execCommand","markword","className","getSelection","insertDelay","emphasis","pitchUp","pitchDown","undo","convertToSsml","html","editor","nativeElement","innerHTML","parser","DOMParser","doc","parseFromString","body","replace","querySelectorAll","forEach","p","textContent","trim","remove","el","createElement","setAttribute","replaceWith","breakEl","prosody","output","onPaste","event","preventDefault","text","clipboardData","getData","selectors","viewQuery","i0"],"sourceRoot":"","sources":["D:\\Sample-Projects\\cursor-demo\\SSML_Editor\\ClientApp\\src\\app\\ssml-editor\\ssml-editor.component.ts","D:\\Sample-Projects\\cursor-demo\\SSML_Editor\\ClientApp\\src\\app\\ssml-editor\\ssml-editor.component.html"],"sourcesContent":["// ssml-editor.component.ts\n\nimport { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\n\n@Component({\n  selector: 'app-ssml-editor',\n  templateUrl: './ssml-editor.component.html',\n  styleUrls: ['./ssml-editor.component.css']\n})\nexport class SsmlEditorComponent implements OnInit {\n  @ViewChild('editor', { static: true }) editor: ElementRef;\n  @ViewChild('output', { static: true }) output: ElementRef;\n\n  constructor() { }\n\n  ngOnInit() {\n    document.execCommand(\"defaultParagraphSeparator\", false, \"p\");\n  }\n\n  markword(className: string) {\n    document.execCommand(\"insertHTML\", false, `<span class='${className}'>${document.getSelection()}</span>`);\n  }\n\n  insertDelay() {\n    document.execCommand(\"insertHTML\", false, \"<i class='fa fa-clock-o' contenteditable='false'></i>\");\n  }\n\n  emphasis() {\n    this.markword(\"emphasis\");\n  }\n\n  pitchUp() {\n    this.markword(\"pitch-up\");\n  }\n\n  pitchDown() {\n    this.markword(\"pitch-down\");\n  }\n\n  undo() {\n    document.execCommand(\"undo\");\n  }\n\n  convertToSsml() {\n    const html = this.editor.nativeElement.innerHTML;\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(html, 'text/html');\n\n    // Replace nbsp\n    doc.body.innerHTML = doc.body.innerHTML.replace(/&nbsp;/g, ' ');\n\n    // Remove empty paragraphs\n    doc.querySelectorAll('p').forEach(p => {\n      if (p.textContent.trim() === '') {\n        p.remove();\n      }\n    });\n\n    // Replace elements\n    doc.querySelectorAll('.emphasis').forEach(el => {\n      const emphasis = doc.createElement('emphasis');\n      emphasis.setAttribute('level', 'strong');\n      emphasis.innerHTML = el.innerHTML;\n      el.replaceWith(emphasis);\n    });\n\n    doc.querySelectorAll('.fa-clock-o').forEach(el => {\n      const breakEl = doc.createElement('break');\n      breakEl.setAttribute('time', '300ms');\n      el.replaceWith(breakEl);\n    });\n\n    doc.querySelectorAll('.pitch-up').forEach(el => {\n      const prosody = doc.createElement('prosody');\n      prosody.setAttribute('pitch', '+3st');\n      prosody.innerHTML = el.innerHTML;\n      el.replaceWith(prosody);\n    });\n\n    doc.querySelectorAll('.pitch-down').forEach(el => {\n      const prosody = doc.createElement('prosody');\n      prosody.setAttribute('pitch', '-3st');\n      prosody.innerHTML = el.innerHTML;\n      el.replaceWith(prosody);\n    });\n\n    this.output.nativeElement.textContent = `<speak>${doc.body.innerHTML}</speak>`;\n  }\n\n  onPaste(event: ClipboardEvent) {\n    event.preventDefault();\n    const text = event.clipboardData.getData(\"text/plain\");\n    document.execCommand(\"insertHTML\", false, text);\n  }\n}","<h1>SSML Editor</h1>\n\n<p>This is a simple example of an Angular component.</p>\n\n<p aria-live=\"polite\">Current count: <strong>2</strong></p>\n\n<button class=\"btn btn-primary\">Increment</button>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}